{"version":3,"sources":["components/AddCategory.js","commun.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","giftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","Config","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","console","log","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aAiB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,YAGnBlB,Q,gCC5BFmB,EACI,mCCCJC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,6BAC2EF,GAD3E,SAEAM,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAXO,kBAYZA,GAZY,4CAAH,sDCAPS,EAAe,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OADAa,QAAQC,IAAIL,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,oDAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCkBDS,EArBE,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SACf,ECFwB,SAACA,GACzB,MAA0BnB,mBAAS,CAC/B0B,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAA4B3C,mBAAS,IAArC,mBAUA,OAVA,UACA4C,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAhB,GACnBc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAGlB,CAACtB,IAEGuB,EDdwBI,CAAa3B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oDAAd,SAAmElB,IAClEsB,GAAW,mBAAGJ,UAAU,mDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEgBtBiB,EA3BO,WAElB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQiD,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAA2BA,SAAYA,GAAtBA,Y,MClBzC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.759593e0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={ handleInputChange }/>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const Config = {\r\n    apiKeyGiphy: 'FLXux8VXQpxCXoCO7WuYs9NxbOZXAiVb'\r\n}","import { Config } from \"../commun\";\r\n\r\nexport const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${Config.apiKeyGiphy}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifts);\r\n    return gifts;\r\n}","import React from \"react\";\r\n\r\nexport const GiftGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nconst GiftGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map( img => (\r\n                        <GiftGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    )) \r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftGrid;","import { useEffect, useState } from \"react\";\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    const [images, setImages] = useState([]);\r\n    useEffect(() => {\r\n        getGift(category).then(img => {\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state; // {data: [], loading: true}\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GiftGrid from \"./components/GiftGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n    const handleAdd = (e) => {\r\n        setCategories([...categories, 'HunterXHunter']);\r\n        // setCategories(['HunterXHunter', ...categories]);\r\n        // setCategories(cats => [...categories, 'HunterXHunter']);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                { \r\n                    categories.map(category => (\r\n                        <GiftGrid key = {category} category = {category}/>\r\n                    )) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './giftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}